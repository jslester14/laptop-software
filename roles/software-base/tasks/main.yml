---
- name: Install Apt Keys
  become: yes
  apt_key:
    id: "{{ item.id }}"
    url: "{{ item.url }}"
  register: keys
  with_items:
    # # NodeJS
    # - id: 68576280
    #   url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    # # Enpass
    # - id: 9798C2FC
    #   url: https://dl.sinew.in/keys/enpass-linux.key
    # Google
    - id: D38B4796
      url: https://dl.google.com/linux/linux_signing_key.pub
    # Microsoft
    - id: BE1229CF
      url: https://packages.microsoft.com/keys/microsoft.asc
    # Docker
    - id: 0EBFCD88
      url: https://download.docker.com/linux/ubuntu/gpg

- name: Install Apt Repos
  become: yes
  apt_repository:
    filename: "{{ item.file }}"
    repo: "{{ item.repo }}"
  register: repos
  with_items:
    # - file: nodesource
    #   repo: deb https://deb.nodesource.com/node_12.x {{ ansible_lsb.codename }} main
    # - file: enpass
    #   repo: deb http://repo.sinew.in/ stable main
    # - file: google-chrome
    #   repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
    - file: azurecli
      repo: deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ {{ ansible_lsb.codename }} main
    - file: docker
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable

- name: Update Apt Cache
  become: yes
  apt:
    update_cache: yes
  when: repos is changed or keys is changed

- name: Install Apt Packages
  become: yes
  apt:
    pkg:
    - apt-transport-https
    - ca-certificates
    - software-properties-common
    - lsb-release
    - gnupg
    - azure-cli
    - code
    - docker-ce
    # - enpass
    # - gimp
    # - gnome-shell-extension-appindicator
    # - google-chrome-stable
    - jq
    # - nautilus-image-converter
    # - network-manager-openvpn-gnome
    - nodejs
    # - openvpn-systemd-resolved
    - python-psutil
    - python3-pip
    - snapd
    - vim
    - zsh
    - zip

# - name: Install awscli
#   become: yes
#   pip:
#     name: awscli
#     executable: pip3

- name: Check installed snaps
  become: yes
  command: snap list
  register: snaps
  changed_when: snaps.stdout is not search(item)
  with_items:
    # - slack
    # - kubectl
    - helm

- name: Install snaps
  become: yes
  command: snap install {{ item }} --classic
  when: snaps is changed
  with_items:
    # - slack
    # - kubectl
    - helm

# - name: Install zoom
#   become: yes
#   apt:
#     deb: https://zoom.us/client/latest/zoom_amd64.deb
  
- name: Install terraform
  become: yes
  unarchive:
    src: https://releases.hashicorp.com/terraform/1.7.3/terraform_1.7.3_linux_amd64.zip
    dest: /usr/local/bin
    remote_src: yes